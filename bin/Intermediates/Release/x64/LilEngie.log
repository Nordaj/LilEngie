  Window.cpp
  Component.cpp
  Camera.cpp
  DirectionalLight.cpp
  Mesh.cpp
  PointLight.cpp
  SpotLight.cpp
  Transform.cpp
  GameObject.cpp
  ObjectManager.cpp
  Scene.cpp
  Game.cpp
  LightHandler.cpp
  Material.cpp
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\utility(235): warning C4244: 'initializing': conversion from 'int' to 'float', possible loss of data
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xmemory0(918): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<const char*,int,0>(std::pair<const char *,int> &&) noexcept(false)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=float
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xmemory0(920): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<const char*,int,0>(std::pair<const char *,int> &&) noexcept(false)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=float
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xtree(1022): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::pair<const char *,int>>(_Alloc &,_Objty *const ,std::pair<const char *,int> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const std::string,float>,std::_Default_allocator_traits<std::allocator<std::pair<const std::string,float>>>::void_pointer>>,
              _Ty=std::pair<const std::string,float>,
              _Objty=std::pair<const std::string,float>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xtree(1029): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::pair<const char *,int>>(_Alloc &,_Objty *const ,std::pair<const char *,int> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const std::string,float>,std::_Default_allocator_traits<std::allocator<std::pair<const std::string,float>>>::void_pointer>>,
              _Ty=std::pair<const std::string,float>,
              _Objty=std::pair<const std::string,float>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xtree(1200): note: see reference to function template instantiation 'std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<std::pair<const char *,int>>(std::pair<const char *,int> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,float>,
              _Alloc=std::allocator<std::pair<const std::string,float>>,
              _Traits=std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<const std::string,float>>,false>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xtree(1201): note: see reference to function template instantiation 'std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<std::pair<const char *,int>>(std::pair<const char *,int> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,float>,
              _Alloc=std::allocator<std::pair<const std::string,float>>,
              _Traits=std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<const std::string,float>>,false>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\map(213): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,float,_Pr,_Alloc,false>>::emplace<std::pair<const char *,int>>(std::pair<const char *,int> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,float>,
              _Kty=std::string,
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,float>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\map(213): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,float,_Pr,_Alloc,false>>::emplace<std::pair<const char *,int>>(std::pair<const char *,int> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,float>,
              _Kty=std::string,
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,float>>
          ]
  d:\documents\github\lilengie\lilengie\core\src\graphics\material.cpp(75): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<std::string,float,std::less<_Kty>,std::allocator<_Ty>>::insert<std::pair<const char *,int>,void>(_Valty &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,float>,
              _Kty=std::string,
              _Valty=std::pair<const char *,int>
          ]
  d:\documents\github\lilengie\lilengie\core\src\graphics\material.cpp(75): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<std::string,float,std::less<_Kty>,std::allocator<_Ty>>::insert<std::pair<const char *,int>,void>(_Valty &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,float>,
              _Kty=std::string,
              _Valty=std::pair<const char *,int>
          ]
  MaterialHandler.cpp
  MeshRenderer.cpp
d:\documents\github\lilengie\lilengie\core\src\graphics\meshrenderer.cpp(58): warning C4267: 'argument': conversion from 'size_t' to 'GLsizei', possible loss of data
  Model.cpp
  ModelHandler.cpp
  Renderer.cpp
d:\documents\github\lilengie\lilengie\core\src\graphics\renderer.cpp(42): warning C4838: conversion from 'int' to 'char' requires a narrowing conversion
d:\documents\github\lilengie\lilengie\core\src\graphics\renderer.cpp(42): warning C4309: 'initializing': truncation of constant value
  Shader.cpp
  Compiling...
  ShaderHandler.cpp
  ShaderReader.cpp
  Texture.cpp
  TextureHandler.cpp
  UniformHandler.cpp
  SceneLoader.cpp
d:\documents\github\lilengie\lilengie\core\src\game\sceneloader.cpp(29): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
d:\documents\github\lilengie\lilengie\core\src\game\sceneloader.cpp(35): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
d:\documents\github\lilengie\lilengie\core\src\game\sceneloader.cpp(58): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
  Input.cpp
  ModelLoader.cpp
d:\documents\github\lilengie\lilengie\core\src\utilities\modelloader.cpp(34): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
d:\documents\github\lilengie\lilengie\core\src\utilities\modelloader.cpp(38): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
d:\documents\github\lilengie\lilengie\core\src\utilities\modelloader.cpp(64): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
d:\documents\github\lilengie\lilengie\core\src\utilities\modelloader.cpp(68): warning C4267: '=': conversion from 'size_t' to 'int', possible loss of data
d:\documents\github\lilengie\lilengie\core\src\utilities\modelloader.cpp(106): warning C4018: '<': signed/unsigned mismatch
d:\documents\github\lilengie\lilengie\core\src\utilities\modelloader.cpp(129): warning C4018: '<': signed/unsigned mismatch
  Main.cpp
LINK : warning LNK4098: defaultlib 'LIBCMT' conflicts with use of other libs; use /NODEFAULTLIB:library
  Generating code
  2540 of 2551 functions (99.6%) were compiled, the rest were copied from previous compilation.
    2530 functions were new in current compilation
    4 functions had inline decision re-evaluated but remain unchanged
  Finished generating code
glew32s.lib(glew.obj) : warning LNK4099: PDB 'vc120.pdb' was not found with 'glew32s.lib(glew.obj)' or at 'D:\Documents\GitHub\LilEngie\bin\Release\x64\vc120.pdb'; linking object as if no debug info
  LilEngie.vcxproj -> D:\Documents\GitHub\LilEngie\bin\Release\x64\LilEngie.exe
