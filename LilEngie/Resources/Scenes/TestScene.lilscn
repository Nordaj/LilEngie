//This is a comment, will not be interpreted

//mdl command for model
//(mdl, name, directory)
mdl gearsModel "Resources/Models/RustyGearsMatty.fbx"

//tex command for texture
//(tex, name, directory)
tex rustTexture "Resources/Textures/Rusty.png"

//shd command for shader
//(shd, name, directory)
shd diffuseShader "Resources/Shaders/Standard/Diffuse.shader"
shd unlitShader "Resources/Shaders/Standard/Unlit.shader"
shd textShader "Resources/Shaders/Standard/Text.shader"

//mat command for material
//(mat, name, shader used, <uniforms>)
//UNIFORMS FOR MATERIALS:
//(put in next lines signified by "-", uniform type, uniform name, uniform values seperated by space)
//(col = color, tex = texture, flt = float, int = integer)
mat tanMaterial diffuseShader
-col "uColor" 0.75 0.6 0.42 1
mat rustMaterial diffuseShader
-col "uColor" 1 1 1 1
-tex "uMainTex" rustTexture
mat unlitMaterial unlitShader
-col "uColor" 1 1 1 1
mat textMaterial textShader

//obj command for game object
//(obj, name, <components>)
//(put in next lines signified by "-", component type, seperate parameters by space)
//(Only supports transform/mesh/camera, not sure what to do about user created components)
//(Transform = parameters: (posXYZ), (eulerXYZ), (scaleXYZ))
//(Mesh = parameters: model, material))
//(PointLight = parameters: (posXYZ), (colorRGB), intensity)
//(Camera = parameters: fov, near, far)
//(DirectionalLight = parameters: (dirXYZ), (colorRGB), intensity)
obj camObject
-Transform 0 0 3 0 0 0 1 1 1
-Camera

obj lightObject
-Transform 0 0 2 45 45 45 0.05f 0.05f 0.05f
-Mesh BaseCube unlitMaterial
-PointLight 0 0 2 1 1 1 0.5

obj gearsObject
-Transform 0 0 0 30 30 0 0.5 0.5 0.5
-Mesh gearsModel rustMaterial

//The first object in the second loaded scene has the same transformation and material as the last in this scene but different models







